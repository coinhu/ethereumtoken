import { tailRec } from './ChainRec';
import { identity as id } from './function';
import { pipeable } from './pipeable';
/**
 * @since 2.0.0
 */
export const URI = 'Identity';
/**
 * @since 2.0.0
 */
export const getShow = id;
/**
 * @since 2.0.0
 */
export const getEq = id;
/**
 * @since 2.0.0
 */
export const identity = {
    URI,
    map: (ma, f) => f(ma),
    of: id,
    ap: (mab, ma) => mab(ma),
    chain: (ma, f) => f(ma),
    reduce: (fa, b, f) => f(b, fa),
    foldMap: _ => (fa, f) => f(fa),
    reduceRight: (fa, b, f) => f(fa, b),
    traverse: (F) => (ta, f) => {
        return F.map(f(ta), id);
    },
    sequence: (F) => (ta) => {
        return F.map(ta, id);
    },
    alt: id,
    extract: id,
    extend: (wa, f) => f(wa),
    chainRec: tailRec
};
const { alt, ap, apFirst, apSecond, chain, chainFirst, duplicate, extend, flatten, foldMap, map, reduce, reduceRight } = pipeable(identity);
export { 
/**
 * @since 2.0.0
 */
alt, 
/**
 * @since 2.0.0
 */
ap, 
/**
 * @since 2.0.0
 */
apFirst, 
/**
 * @since 2.0.0
 */
apSecond, 
/**
 * @since 2.0.0
 */
chain, 
/**
 * @since 2.0.0
 */
chainFirst, 
/**
 * @since 2.0.0
 */
duplicate, 
/**
 * @since 2.0.0
 */
extend, 
/**
 * @since 2.0.0
 */
flatten, 
/**
 * @since 2.0.0
 */
foldMap, 
/**
 * @since 2.0.0
 */
map, 
/**
 * @since 2.0.0
 */
reduce, 
/**
 * @since 2.0.0
 */
reduceRight };
