import { pipeable } from './pipeable';
/**
 * @since 2.0.0
 */
export const URI = 'Store';
/**
 * Reposition the focus at the specified position
 *
 * @since 2.0.0
 */
export function seek(s) {
    return wa => ({ peek: wa.peek, pos: s });
}
/**
 * Reposition the focus at the specified position, which depends on the current position
 *
 * @since 2.0.0
 */
export function seeks(f) {
    return wa => ({ peek: wa.peek, pos: f(wa.pos) });
}
/**
 * Extract a value from a position which depends on the current position
 *
 * @since 2.0.0
 */
export function peeks(f) {
    return wa => wa.peek(f(wa.pos));
}
export function experiment(F) {
    return f => wa => F.map(f(wa.pos), s => wa.peek(s));
}
/**
 * @since 2.0.0
 */
export const store = {
    URI,
    map: (wa, f) => ({
        peek: s => f(wa.peek(s)),
        pos: wa.pos
    }),
    extract: wa => wa.peek(wa.pos),
    extend: (wa, f) => ({
        peek: s => f({ peek: wa.peek, pos: s }),
        pos: wa.pos
    })
};
const { duplicate, extend, map } = pipeable(store);
export { 
/**
 * @since 2.0.0
 */
duplicate, 
/**
 * @since 2.0.0
 */
extend, 
/**
 * @since 2.0.0
 */
map };
