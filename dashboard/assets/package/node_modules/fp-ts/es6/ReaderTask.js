import { pipeable } from './pipeable';
import { getSemigroup as getReaderSemigroup } from './Reader';
import { getReaderM } from './ReaderT';
import * as TA from './Task';
const T = getReaderM(TA.task);
/**
 * @since 2.3.0
 */
export const URI = 'ReaderTask';
/**
 * @since 2.4.0
 */
export function run(ma, r) {
    return ma(r)();
}
/**
 * @since 2.3.0
 */
export const fromTask = T.fromM;
/**
 * @since 2.3.0
 */
export const fromReader = T.fromReader;
/**
 * @since 2.3.0
 */
export function fromIO(ma) {
    return fromTask(TA.fromIO(ma));
}
/**
 * @since 2.3.0
 */
export const of = T.of;
/**
 * @since 2.3.0
 */
export function getSemigroup(S) {
    return getReaderSemigroup(TA.getSemigroup(S));
}
/**
 * @since 2.3.0
 */
export function getMonoid(M) {
    return {
        concat: getSemigroup(M).concat,
        empty: of(M.empty)
    };
}
/**
 * @since 2.3.0
 */
export const ask = T.ask;
/**
 * @since 2.3.0
 */
export const asks = T.asks;
/**
 * @since 2.3.0
 */
export function local(f) {
    return ma => T.local(ma, f);
}
/**
 * @since 2.4.0
 */
export function fromIOK(f) {
    return (...a) => fromIO(f(...a));
}
/**
 * @since 2.4.0
 */
export function chainIOK(f) {
    return chain(fromIOK(f));
}
/**
 * @since 2.4.0
 */
export function fromTaskK(f) {
    return (...a) => fromTask(f(...a));
}
/**
 * @since 2.4.0
 */
export function chainTaskK(f) {
    return chain(fromTaskK(f));
}
/**
 * @since 2.3.0
 */
export const readerTask = {
    URI,
    map: T.map,
    of,
    ap: T.ap,
    chain: T.chain,
    fromIO,
    fromTask
};
/**
 * Like `readerTask` but `ap` is sequential
 * @since 2.3.0
 */
export const readerTaskSeq = Object.assign(Object.assign({}, readerTask), { ap: (mab, ma) => T.chain(mab, f => T.map(ma, f)) });
const { ap, apFirst, apSecond, chain, chainFirst, flatten, map } = pipeable(readerTask);
export { 
/**
 * @since 2.3.0
 */
ap, 
/**
 * @since 2.3.0
 */
apFirst, 
/**
 * @since 2.3.0
 */
apSecond, 
/**
 * @since 2.3.0
 */
chain, 
/**
 * @since 2.3.0
 */
chainFirst, 
/**
 * @since 2.3.0
 */
flatten, 
/**
 * @since 2.3.0
 */
map };
